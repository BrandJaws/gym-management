{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "lib/browser/fingerprint.js",
    "lib/browser/isCordova.js",
    "lib/browser/isReactNative.js",
    "lib/browser/readAsByteArray.js",
    "lib/browser/request.js",
    "lib/browser/source.js",
    "lib/browser/storage.js",
    "lib/browser/uriToBlob.js",
    "lib/error.js",
    "lib/index.js",
    "lib/upload.js",
    "node_modules/extend/index.js",
    "node_modules/js-base64/base64.js",
    "node_modules/querystringify/index.js",
    "node_modules/requires-port/index.js",
    "node_modules/url-parse/index.js"
  ],
  "names": [],
  "mappings": "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AAO,cAAP,GAAwB,cAAxB;;kBAEe,M;;;ACrqBfrvtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import isReactNative from \"./isReactNative\";\n\n/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function fingerprint(file, options, callback) {\n  if (isReactNative()) {\n    return callback(null, reactNativeFingerprint(file, options));\n  }\n\n  return callback(null, [\n    \"tus-br\",\n    file.name,\n    file.type,\n    file.size,\n    file.lastModified,\n    options.endpoint\n  ].join(\"-\"));\n}\n\nfunction reactNativeFingerprint(file, options) {\n  let exifHash = file.exif ? hashCode(JSON.stringify(file.exif)) : \"noexif\";\n  return [\n    \"tus-rn\",\n    file.name || \"noname\",\n    file.size || \"nosize\",\n    exifHash,\n    options.endpoint\n  ].join(\"/\");\n}\n\nfunction hashCode(str) {\n  // from https://stackoverflow.com/a/8831937/151666\n  var hash = 0;\n  if (str.length === 0) {\n    return hash;\n  }\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n",
    "const isCordova = () => typeof window != \"undefined\" && (\n  typeof window.PhoneGap != \"undefined\" ||\n    typeof window.Cordova != \"undefined\" ||\n    typeof window.cordova != \"undefined\");\n\nexport default isCordova;\n",
    "const isReactNative = () => (typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\");\n\nexport default isReactNative;\n",
    "/**\n * readAsByteArray converts a File object to a Uint8Array.\n * This function is only used on the Apache Cordova platform.\n * See https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-file/index.html#read-a-file\n */\nfunction readAsByteArray(chunk, callback) {\n  let reader = new FileReader();\n  reader.onload = () => {\n    callback(null, new Uint8Array(reader.result));\n  };\n  reader.onerror = (err) => {\n    callback(err);\n  };\n  reader.readAsArrayBuffer(chunk);\n}\n\nexport default readAsByteArray;\n",
    "/* global window */\nimport URL from \"url-parse\";\n\nexport function newRequest() {\n  return new window.XMLHttpRequest();\n}\n\nexport function resolveUrl(origin, link) {\n  return new URL(link, origin).toString();\n}\n",
    "import isReactNative from \"./isReactNative\";\nimport uriToBlob from \"./uriToBlob\";\nimport isCordova from \"./isCordova\";\nimport readAsByteArray from \"./readAsByteArray\";\n\nclass FileSource {\n  constructor(file) {\n    this._file = file;\n    this.size = file.size;\n  }\n\n  slice(start, end, callback) {\n    // In Apache Cordova applications, a File must be resolved using\n    // FileReader instances, see\n    // https://cordova.apache.org/docs/en/8.x/reference/cordova-plugin-file/index.html#read-a-file\n    if (isCordova()) {\n      readAsByteArray(this._file.slice(start, end), (err, chunk) => {\n        if (err) return callback(err);\n\n        callback(null, chunk);\n      });\n      return;\n    }\n\n    callback(null, this._file.slice(start, end));\n  }\n\n  close() {}\n}\n\nclass StreamSource {\n  constructor(reader, chunkSize) {\n    this._chunkSize = chunkSize;\n    this._buffer = undefined;\n    this._bufferOffset = 0;\n    this._reader = reader;\n    this._done = false;\n  }\n\n  slice(start, end, callback) {\n    if (start < this._bufferOffset) {\n      callback(new Error(\"Requested data is before the reader's current offset\"));\n      return;\n    }\n\n    return this._readUntilEnoughDataOrDone(start, end, callback);\n  }\n\n  _readUntilEnoughDataOrDone(start, end, callback) {\n    const hasEnoughData = end <= this._bufferOffset + len(this._buffer);\n    if (this._done || hasEnoughData) {\n      var value = this._getDataFromBuffer(start, end);\n      callback(null, value, value == null ? this._done : false);\n      return;\n    }\n    this._reader.read().then(({ value, done }) => {\n      if (done) {\n        this._done = true;\n      } else if (this._buffer === undefined) {\n        this._buffer = value;\n      } else {\n        this._buffer = concat(this._buffer, value);\n      }\n\n      this._readUntilEnoughDataOrDone(start, end, callback);\n    }).catch(err => {\n      callback(new Error(\"Error during read: \"+err));\n    });\n  }\n\n  _getDataFromBuffer(start, end) {\n    // Remove data from buffer before `start`.\n    // Data might be reread from the buffer if an upload fails, so we can only\n    // safely delete data when it comes *before* what is currently being read.\n    if (start > this._bufferOffset) {\n      this._buffer = this._buffer.slice(start - this._bufferOffset);\n      this._bufferOffset = start;\n    }\n    // If the buffer is empty after removing old data, all data has been read.\n    const hasAllDataBeenRead = len(this._buffer) === 0;\n    if (this._done && hasAllDataBeenRead) {\n      return null;\n    }\n    // We already removed data before `start`, so we just return the first\n    // chunk from the buffer.\n    return this._buffer.slice(0, end - start);\n  }\n\n  close() {\n    if (this._reader.cancel) {\n      this._reader.cancel();\n    }\n  }\n}\n\nfunction len(blobOrArray) {\n  if (blobOrArray === undefined) return 0;\n  if (blobOrArray.size !== undefined) return blobOrArray.size;\n  return blobOrArray.length;\n}\n\n/*\n  Typed arrays and blobs don't have a concat method.\n  This function helps StreamSource accumulate data to reach chunkSize.\n*/\nfunction concat(a, b) {\n  if (a.concat) { // Is `a` an Array?\n    return a.concat(b);\n  }\n  if (a instanceof Blob) {\n    return new Blob([a,b], {type: a.type});\n  }\n  if (a.set) { // Is `a` a typed array?\n    var c = new a.constructor(a.length + b.length);\n    c.set(a);\n    c.set(b, a.length);\n    return c;\n  }\n  throw new Error(\"Unknown data type\");\n}\n\nexport function getSource(input, chunkSize, callback) {\n  // In React Native, when user selects a file, instead of a File or Blob,\n  // you usually get a file object {} with a uri property that contains\n  // a local path to the file. We use XMLHttpRequest to fetch\n  // the file blob, before uploading with tus.\n  if (isReactNative() && input && typeof input.uri !== \"undefined\") {\n    uriToBlob(input.uri, (err, blob) => {\n      if (err) {\n        return callback(new Error(\"tus: cannot fetch `file.uri` as Blob, make sure the uri is correct and accessible. \" + err));\n      }\n      callback(null, new FileSource(blob));\n    });\n    return;\n  }\n\n  // Since we emulate the Blob type in our tests (not all target browsers\n  // support it), we cannot use `instanceof` for testing whether the input value\n  // can be handled. Instead, we simply check is the slice() function and the\n  // size property are available.\n  if (typeof input.slice === \"function\" && typeof input.size !== \"undefined\") {\n    callback(null, new FileSource(input));\n    return;\n  }\n\n  if (typeof input.read === \"function\") {\n    chunkSize = +chunkSize;\n    if (!isFinite(chunkSize)) {\n      callback(new Error(\"cannot create source for stream without a finite value for the `chunkSize` option\"));\n      return;\n    }\n    callback(null, new StreamSource(input, chunkSize));\n    return;\n  }\n\n  callback(new Error(\"source object may only be an instance of File, Blob, or Reader in this environment\"));\n}\n",
    "/* global window, localStorage */\n\nlet hasStorage = false;\ntry {\n  hasStorage = \"localStorage\" in window;\n\n  // Attempt to store and read entries from the local storage to detect Private\n  // Mode on Safari on iOS (see #49)\n  var key = \"tusSupport\";\n  localStorage.setItem(key, localStorage.getItem(key));\n\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown. When in private mode on iOS Safari, a QuotaExceededError is\n  // thrown (see #49)\n  if (e.code === e.SECURITY_ERR || e.code === e.QUOTA_EXCEEDED_ERR) {\n    hasStorage = false;\n  } else {\n    throw e;\n  }\n}\n\nexport const canStoreURLs = hasStorage;\n\nclass LocalStorage {\n  setItem(key, value, cb) {\n    cb(null, localStorage.setItem(key, value));\n  }\n\n  getItem(key, cb) {\n    cb(null, localStorage.getItem(key));\n  }\n\n  removeItem(key, cb) {\n    cb(null, localStorage.removeItem(key));\n  }\n}\n\nexport function getStorage() {\n  return hasStorage ? new LocalStorage() : null;\n}\n",
    "/**\n * uriToBlob resolves a URI to a Blob object. This is used for\n * React Native to retrieve a file (identified by a file://\n * URI) as a blob.\n */\nfunction uriToBlob(uri, done) {\n  const xhr = new XMLHttpRequest();\n  xhr.responseType = \"blob\";\n  xhr.onload = () => {\n    const blob = xhr.response;\n    done(null, blob);\n  };\n  xhr.onerror = (err) => {\n    done(err);\n  };\n  xhr.open(\"GET\", uri);\n  xhr.send();\n}\n\nexport default uriToBlob;\n",
    "class DetailedError extends Error {\n  constructor(error, causingErr = null, xhr = null) {\n    super(error.message);\n\n    this.originalRequest = xhr;\n    this.causingError = causingErr;\n\n    let message = error.message;\n    if (causingErr != null) {\n      message += `, caused by ${causingErr.toString()}`;\n    }\n    if (xhr != null) {\n      message += `, originated from request (response code: ${xhr.status}, response text: ${xhr.responseText})`;\n    }\n    this.message = message;\n  }\n}\n\nexport default DetailedError;\n",
    "/* global window */\nimport Upload from \"./upload\";\nimport * as storage from \"./node/storage\";\n\nconst {defaultOptions} = Upload;\n\nconst moduleExport = {\n  Upload,\n  canStoreURLs: storage.canStoreURLs,\n  defaultOptions\n};\n\nif (typeof window !== \"undefined\") {\n  // Browser environment using XMLHttpRequest\n  const {XMLHttpRequest, Blob} = window;\n\n  moduleExport.isSupported = (\n    XMLHttpRequest &&\n    Blob &&\n    typeof Blob.prototype.slice === \"function\"\n  );\n} else {\n  // Node.js environment using http module\n  moduleExport.isSupported = true;\n  // make FileStorage module available as it will not be set by default.\n  moduleExport.FileStorage = storage.FileStorage;\n}\n\n// The usage of the commonjs exporting syntax instead of the new ECMAScript\n// one is actually inteded and prevents weird behaviour if we are trying to\n// import this module in another module using Babel.\nmodule.exports = moduleExport;\n",
    "/* global window */\nimport DetailedError from \"./error\";\nimport extend from \"extend\";\nimport { Base64 } from \"js-base64\";\n\n// We import the files used inside the Node environment which are rewritten\n// for browsers using the rules defined in the package.json\nimport { newRequest, resolveUrl } from \"./node/request\";\nimport { getSource } from \"./node/source\";\nimport { getStorage } from \"./node/storage\";\nimport fingerprint from \"./node/fingerprint\";\n\nconst defaultOptions = {\n  endpoint: null,\n  fingerprint,\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null,\n  overridePatchMethod: false,\n  retryDelays: null,\n  removeFingerprintOnSuccess: false,\n  uploadLengthDeferred: false,\n  urlStorage: null,\n  fileReader: null,\n  uploadDataDuringCreation: false\n};\n\nclass Upload {\n  constructor(file, options) {\n    this.options = extend(true, {}, defaultOptions, options);\n\n    // The storage module used to store URLs\n    this._storage = this.options.urlStorage;\n\n    // The underlying File/Blob object\n    this.file = file;\n\n    // The URL against which the file will be uploaded\n    this.url = null;\n\n    // The underlying XHR object for the current PATCH request\n    this._xhr = null;\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null;\n\n    // The offset used in the current PATCH request\n    this._offset = null;\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false;\n\n    // The file's size in bytes\n    this._size = null;\n\n    // The Source object which will wrap around the given file and provides us\n    // with a unified interface for getting its size and slice chunks from its\n    // content allowing us to easily handle Files, Blobs, Buffers and Streams.\n    this._source = null;\n\n    // The current count of attempts which have been made. Null indicates none.\n    this._retryAttempt = 0;\n\n    // The timeout's ID which is used to delay the next retry\n    this._retryTimeout = null;\n\n    // The offset of the remote upload before the latest attempt was started.\n    this._offsetBeforeRetry = 0;\n  }\n\n  static terminate(url, options, cb) {\n    if (typeof options !== \"function\" && typeof cb !== \"function\") {\n      throw new Error(\"tus: a callback function must be specified\");\n    }\n\n    if (typeof options === \"function\") {\n      cb = options;\n      options = {};\n    }\n\n    let xhr = newRequest();\n    xhr.open(\"DELETE\", url, true);\n\n    xhr.onload = () => {\n      if (xhr.status !== 204) {\n        cb(new DetailedError(new Error(\"tus: unexpected response while terminating upload\"), null, xhr));\n        return;\n      }\n\n      cb();\n    };\n\n    xhr.onerror = (err) => {\n      cb(new DetailedError(err, new Error(\"tus: failed to terminate upload\"), xhr));\n    };\n\n    setupXHR(xhr, options);\n    xhr.send(null);\n  }\n\n  start() {\n    let file = this.file;\n\n    if (!file) {\n      this._emitError(new Error(\"tus: no file or stream to upload provided\"));\n      return;\n    }\n\n    if (!this.options.endpoint && !this.options.uploadUrl) {\n      this._emitError(new Error(\"tus: neither an endpoint or an upload URL is provided\"));\n      return;\n    }\n\n    if (this.options.resume && this._storage == null) {\n      this._storage = getStorage();\n    }\n\n    if (this._source) {\n      this._start(this._source);\n    } else {\n      const fileReader = this.options.fileReader || getSource;\n      fileReader(file, this.options.chunkSize, (err, source) => {\n        if (err) {\n          this._emitError(err);\n          return;\n        }\n\n        this._source = source;\n        this._start(source);\n      });\n    }\n  }\n\n  _start(source) {\n    let file = this.file;\n\n    // First, we look at the uploadLengthDeferred option.\n    // Next, we check if the caller has supplied a manual upload size.\n    // Finally, we try to use the calculated size from the source object.\n    if (this.options.uploadLengthDeferred) {\n      this._size = null;\n    } else if (this.options.uploadSize != null) {\n      this._size = +this.options.uploadSize;\n      if (isNaN(this._size)) {\n        this._emitError(new Error(\"tus: cannot convert `uploadSize` option into a number\"));\n        return;\n      }\n    } else {\n      this._size = source.size;\n      if (this._size == null) {\n        this._emitError(new Error(\"tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option\"));\n        return;\n      }\n    }\n\n    let retryDelays = this.options.retryDelays;\n    if (retryDelays != null) {\n      if (Object.prototype.toString.call(retryDelays) !== \"[object Array]\") {\n        this._emitError(new Error(\"tus: the `retryDelays` option must either be an array or null\"));\n        return;\n      } else {\n        let errorCallback = this.options.onError;\n        this.options.onError = (err) => {\n          // Restore the original error callback which may have been set.\n          this.options.onError = errorCallback;\n\n          // We will reset the attempt counter if\n          // - we were already able to connect to the server (offset != null) and\n          // - we were able to upload a small chunk of data to the server\n          let shouldResetDelays = this._offset != null && (this._offset > this._offsetBeforeRetry);\n          if (shouldResetDelays) {\n            this._retryAttempt = 0;\n          }\n\n          let isOnline = true;\n          if (typeof window !== \"undefined\" &&\n             \"navigator\" in window &&\n             window.navigator.onLine === false) {\n            isOnline = false;\n          }\n\n          // We only attempt a retry if\n          // - we didn't exceed the maxium number of retries, yet, and\n          // - this error was caused by a request or it's response and\n          // - the error is server error (i.e. no a status 4xx or a 409 or 423) and\n          // - the browser does not indicate that we are offline\n          let status = err.originalRequest ? err.originalRequest.status : 0;\n          let isServerError = !inStatusCategory(status, 400) || status === 409 || status === 423;\n          let shouldRetry = this._retryAttempt < retryDelays.length &&\n                            err.originalRequest != null &&\n                            isServerError &&\n                            isOnline;\n\n          if (!shouldRetry) {\n            this._emitError(err);\n            return;\n          }\n\n          let delay = retryDelays[this._retryAttempt++];\n\n          this._offsetBeforeRetry = this._offset;\n          this.options.uploadUrl = this.url;\n\n          this._retryTimeout = setTimeout(() => {\n            this.start();\n          }, delay);\n        };\n      }\n    }\n\n    // Reset the aborted flag when the upload is started or else the\n    // _startUpload will stop before sending a request if the upload has been\n    // aborted previously.\n    this._aborted = false;\n\n    // The upload had been started previously and we should reuse this URL.\n    if (this.url != null) {\n      this._resumeUpload();\n      return;\n    }\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n      this.url = this.options.uploadUrl;\n      this._resumeUpload();\n      return;\n    }\n\n    // Try to find the endpoint for the file in the storage\n    if (this._hasStorage()) {\n      this.options.fingerprint(file, this.options, (err, fingerprintValue) => {\n        if (err) {\n          this._emitError(err);\n          return;\n        }\n\n        this._fingerprint = fingerprintValue;\n        this._storage.getItem(this._fingerprint, (err, resumedUrl) => {\n          if (err) {\n            this._emitError(err);\n            return;\n          }\n\n          if (resumedUrl != null) {\n            this.url = resumedUrl;\n            this._resumeUpload();\n          } else {\n            this._createUpload();\n          }\n        });\n      });\n    } else {\n      // An upload has not started for the file yet, so we start a new one\n      this._createUpload();\n    }\n  }\n\n  abort(shouldTerminate, cb) {\n    if (this._xhr !== null) {\n      this._xhr.abort();\n      this._source.close();\n    }\n    this._aborted = true;\n\n    if (this._retryTimeout != null) {\n      clearTimeout(this._retryTimeout);\n      this._retryTimeout = null;\n    }\n\n    cb = cb || function () {};\n    if (shouldTerminate) {\n      Upload.terminate(this.url, this.options, (err, xhr) => {\n        if (err) {\n          return cb(err, xhr);\n        }\n\n        this._hasStorage() ? this._storage.removeItem(this._fingerprint, cb) : cb();\n      });\n    } else {\n      cb();\n    }\n  }\n\n  _hasStorage() {\n    return this.options.resume && this._storage;\n  }\n\n  _emitXhrError(xhr, err, causingErr) {\n    this._emitError(new DetailedError(err, causingErr, xhr));\n  }\n\n  _emitError(err) {\n    if (typeof this.options.onError === \"function\") {\n      this.options.onError(err);\n    } else {\n      throw err;\n    }\n  }\n\n  _emitSuccess() {\n    if (typeof this.options.onSuccess === \"function\") {\n      this.options.onSuccess();\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   * @param  {number} bytesSent  Number of bytes sent to the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === \"function\") {\n      this.options.onProgress(bytesSent, bytesTotal);\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param  {number} chunkSize  Size of the chunk that was accepted by the\n   *                             server.\n   * @param  {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === \"function\") {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal);\n    }\n  }\n\n  /**\n   * Set the headers used in the request and the withCredentials property\n   * as defined in the options\n   *\n   * @param {XMLHttpRequest} xhr\n   */\n  _setupXHR(xhr) {\n    this._xhr = xhr;\n    setupXHR(xhr, this.options);\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    if (!this.options.endpoint) {\n      this._emitError(new Error(\"tus: unable to create upload because no endpoint is provided\"));\n      return;\n    }\n\n    let xhr = newRequest();\n    xhr.open(\"POST\", this.options.endpoint, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while creating upload\"));\n        return;\n      }\n\n      let location = xhr.getResponseHeader(\"Location\");\n      if (location == null) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing Location header\"));\n        return;\n      }\n\n      this.url = resolveUrl(this.options.endpoint, location);\n\n      if (this._size === 0) {\n        // Nothing to upload and file was successfully created\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      if (this._hasStorage()) {\n        this._storage.setItem(this._fingerprint, this.url, (err) => {\n          if (err) {\n            this._emitError(err);\n          }\n        });\n      }\n\n      if (this.options.uploadDataDuringCreation) {\n        this._handleUploadResponse(xhr);\n      } else {\n        this._offset = 0;\n        this._startUpload();\n\n      }\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to create upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    if (this.options.uploadLengthDeferred) {\n      xhr.setRequestHeader(\"Upload-Defer-Length\", 1);\n    } else {\n      xhr.setRequestHeader(\"Upload-Length\", this._size);\n    }\n\n    // Add metadata if values have been added\n    var metadata = encodeMetadata(this.options.metadata);\n    if (metadata !== \"\") {\n      xhr.setRequestHeader(\"Upload-Metadata\", metadata);\n    }\n\n    if (this.options.uploadDataDuringCreation && !this.options.uploadLengthDeferred) {\n      this._offset = 0;\n      this._addChunkToRequest(xhr);\n    } else {\n      xhr.send(null);\n    }\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    let xhr = newRequest();\n    xhr.open(\"HEAD\", this.url, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        if (this._hasStorage() && inStatusCategory(xhr.status, 400)) {\n          // Remove stored fingerprint and corresponding endpoint,\n          // on client errors since the file can not be found\n          this._storage.removeItem(this._fingerprint, (err) => {\n            if (err) {\n              this._emitError(err);\n            }\n          });\n        }\n\n        // If the upload is locked (indicated by the 423 Locked status code), we\n        // emit an error instead of directly starting a new upload. This way the\n        // retry logic can catch the error and will retry the upload. An upload\n        // is usually locked for a short period of time and will be available\n        // afterwards.\n        if (xhr.status === 423) {\n          this._emitXhrError(xhr, new Error(\"tus: upload is currently locked; retry later\"));\n          return;\n        }\n\n        if (!this.options.endpoint) {\n          // Don't attempt to create a new upload if no endpoint is provided.\n          this._emitXhrError(xhr, new Error(\"tus: unable to resume upload (new upload cannot be created without an endpoint)\"));\n          return;\n        }\n\n        // Try to create a new upload\n        this.url = null;\n        this._createUpload();\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      let length = parseInt(xhr.getResponseHeader(\"Upload-Length\"), 10);\n      if (isNaN(length) && !this.options.uploadLengthDeferred) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing length value\"));\n        return;\n      }\n\n      // Upload has already been completed and we do not need to send additional\n      // data to the server\n      if (offset === length) {\n        this._emitProgress(length, length);\n        this._emitSuccess();\n        return;\n      }\n\n      this._offset = offset;\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to resume upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.send(null);\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _startUpload() {\n    // If the upload has been aborted, we will not send the next PATCH request.\n    // This is important if the abort method was called during a callback, such\n    // as onChunkComplete or onProgress.\n    if (this._aborted) {\n      return;\n    }\n\n    let xhr = newRequest();\n\n    // Some browser and servers may not support the PATCH method. For those\n    // cases, you can tell tus-js-client to use a POST request with the\n    // X-HTTP-Method-Override header for simulating a PATCH request.\n    if (this.options.overridePatchMethod) {\n      xhr.open(\"POST\", this.url, true);\n      xhr.setRequestHeader(\"X-HTTP-Method-Override\", \"PATCH\");\n    } else {\n      xhr.open(\"PATCH\", this.url, true);\n    }\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while uploading chunk\"));\n        return;\n      }\n\n      this._handleUploadResponse(xhr);\n    };\n\n    xhr.onerror = (err) => {\n      // Don't emit an error if the upload was aborted manually\n      if (this._aborted) {\n        return;\n      }\n\n      this._emitXhrError(xhr, new Error(\"tus: failed to upload chunk at offset \" + this._offset), err);\n    };\n\n    this._setupXHR(xhr);\n\n    xhr.setRequestHeader(\"Upload-Offset\", this._offset);\n    this._addChunkToRequest(xhr);\n  }\n\n  /**\n   * _addChunktoRequest reads a chunk from the source and sends it using the\n   * supplied XHR object. It will not handle the response.\n   */\n  _addChunkToRequest(xhr) {\n    // Test support for progress events before attaching an event listener\n    if (\"upload\" in xhr) {\n      xhr.upload.onprogress = (e) => {\n        if (!e.lengthComputable) {\n          return;\n        }\n\n        this._emitProgress(start + e.loaded, this._size);\n      };\n    }\n\n    xhr.setRequestHeader(\"Content-Type\", \"application/offset+octet-stream\");\n\n    let start = this._offset;\n    let end = this._offset + this.options.chunkSize;\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if ((end === Infinity || end > this._size) && !this.options.uploadLengthDeferred) {\n      end = this._size;\n    }\n\n    this._source.slice(start, end, (err, value, complete) => {\n      if (err) {\n        this._emitError(err);\n        return;\n      }\n\n      if (this.options.uploadLengthDeferred) {\n        if (complete) {\n          this._size = this._offset + (value && value.size ? value.size : 0);\n          xhr.setRequestHeader(\"Upload-Length\", this._size);\n        }\n      }\n\n      if (value === null) {\n        xhr.send();\n      } else {\n        xhr.send(value);\n        this._emitProgress(this._offset, this._size);\n      }\n    });\n  }\n\n  /**\n   * _handleUploadResponse is used by requests that haven been sent using _addChunkToRequest\n   * and already have received a response.\n   */\n  _handleUploadResponse(xhr) {\n    let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n    if (isNaN(offset)) {\n      this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n      return;\n    }\n\n    this._emitProgress(offset, this._size);\n    this._emitChunkComplete(offset - this._offset, offset, this._size);\n\n    this._offset = offset;\n\n    if (offset == this._size) {\n      if (this.options.removeFingerprintOnSuccess && this.options.resume) {\n        // Remove stored fingerprint and corresponding endpoint. This causes\n        // new upload of the same file must be treated as a different file.\n        this._storage.removeItem(this._fingerprint, (err) => {\n          if (err) {\n            this._emitError(err);\n          }\n        });\n      }\n\n      // Yay, finally done :)\n      this._emitSuccess();\n      this._source.close();\n      return;\n    }\n\n    this._startUpload();\n  }\n}\n\nfunction encodeMetadata(metadata) {\n  var encoded = [];\n\n  for (var key in metadata) {\n    encoded.push(key + \" \" + Base64.encode(metadata[key]));\n  }\n\n  return encoded.join(\",\");\n}\n\n/**\n * Checks whether a given status is in the range of the expected category.\n * For example, only a status between 200 and 299 will satisfy the category 200.\n *\n * @api private\n */\nfunction inStatusCategory(status, category) {\n  return (status >= category && status < (category + 100));\n}\n\nfunction setupXHR(xhr, options) {\n  xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n  let headers = options.headers || {};\n\n  for (let name in headers) {\n    xhr.setRequestHeader(name, headers[name]);\n  }\n\n  xhr.withCredentials = options.withCredentials;\n}\n\nUpload.defaultOptions = defaultOptions;\n\nexport default Upload;\n",
    "'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n",
    "/*\n *  base64.js\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory(global)\n        : typeof define === 'function' && define.amd\n        ? define(factory) : factory(global)\n}((\n    typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n: this\n), function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.4.9\";\n    // if node.js and NOT React Native, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = eval(\"require('buffer').Buffer\");\n        } catch (err) {\n            buffer = undefined;\n        }\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ?\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\n        ? function (u) {\n            return (u.constructor === buffer.constructor ? u : buffer.from(u))\n                .toString('base64')\n        }\n        :  function (u) {\n            return (u.constructor === buffer.constructor ? u : new  buffer(u))\n                .toString('base64')\n        }\n        : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ?\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\n        ? function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : buffer.from(a, 'base64')).toString();\n        }\n        : function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : new buffer(a, 'base64')).toString();\n        }\n        : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict,\n        __buffer__: buffer\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n",
    "'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    if (key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n",
    "'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n",
    "'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var location = global && global.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.qs = qs;\n\nmodule.exports = Url;\n"
  ]
}